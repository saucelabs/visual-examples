# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test readme files

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  wdio:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wdio-cucumber:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio-cucumber
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wdio-jasmine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio-jasmine
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wd-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build wd-java example
        uses: docker/build-push-action@v4
        with:
          context: ./wd-java
          file: ./wd-java/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wd-java-testng:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build wd-java-testng example
        uses: docker/build-push-action@v4
        with:
          context: ./wd-java-testng
          file: ./wd-java/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Cypress example
        uses: docker/build-push-action@v5
        with:
          context: ./cypress
          file: ./cypress/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Storybook example
        uses: docker/build-push-action@v4
        with:
          context: ./storybook
          file: ./storybook/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  cypress-saucectl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Cypress example
        uses: docker/build-push-action@v5
        with:
          context: ./cypress
          file: ./cypress/Dockerfile.saucectl
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  xunit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build NUnit example
        uses: docker/build-push-action@v4
        with:
          context: ./dotnet-xunit
          file: ./dotnet-xunit/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  nunit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build NUnit example
        uses: docker/build-push-action@v4
        with:
          context: ./dotnet-nunit
          file: ./dotnet-nunit/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"