# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: WDIO Tests

on:
  push:
    paths:
      - 'wdio*/**'
      - '.github/workflows/wdio.yml'
    branches:
      - main
  pull_request:
    paths:
      - 'wdio*/**'
      - '.github/workflows/wdio.yml'
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  wdio:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wdio-cucumber:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio-cucumber
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wdio-jasmine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio-jasmine
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            "dotenv=${{ secrets.DOTENV }}"

  wdio-android-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install saucectl
        uses: saucelabs/saucectl-run-action@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          skip-run: true

      - name: Pre-Upload App
        id: upload
        working-directory: ./wdio-android-app/
        run: |
          ANDROID_APP_FILEID=$(saucectl storage upload ./app/SauceLabs-Demo-App.apk -o json | jq -r '.id')
          echo "::set-output name=ANDROID_APP_FILEID::${ANDROID_APP_FILEID}"

      - name: Build wdio example
        uses: docker/build-push-action@v4
        with:
          context: ./wdio-android-app
          file: ./wdio/Dockerfile
          push: false
          secrets: |
            dotenv=${{ secrets.DOTENV }}
            ANDROID_APP_FILEID=${{ steps.upload.outputs.ANDROID_APP_FILEID }}
